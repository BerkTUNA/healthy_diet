<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>